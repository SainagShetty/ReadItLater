{
    "status": "OK",
    "usage": "By accessing AlchemyAPI or using information generated by AlchemyAPI, you are agreeing to be bound by the AlchemyAPI Terms of Use: http://www.alchemyapi.com/company/terms.html",
    "url": "http://1000hz.github.io/bootstrap-validator/",
    "language": "english",
    "text": "<form data-toggle= \"validator\" role= \"form\" >   <div class= \"form-group\" >     <label for= \"inputName\" class= \"control-label\" >Name</label>     <input type= \"text\" class= \"form-control\" id= \"inputName\" placeholder= \"Cina Saffary\" required >   </div>   <div class= \"form-group has-feedback\" >     <label for= \"inputTwitter\" class= \"control-label\" >Twitter</label>     <div class= \"input-group\" >       <span class= \"input-group-addon\" >@</span>       <input type= \"text\" pattern= \"^[_A-z0-9]{1,}$\" maxlength= \"15\" class= \"form-control\" id= \"inputTwitter\" placeholder= \"1000hz\" required >     </div>     <span class= \"glyphicon form-control-feedback\" aria-hidden= \"true\" ></span>     <span class= \"help-block with-errors\" >Hey look, this one has feedback icons!</span>   </div>   <div class= \"form-group\" >     <label for= \"inputEmail\" class= \"control-label\" >Email</label>     <input type= \"email\" class= \"form-control\" id= \"inputEmail\" placeholder= \"Email\" data-error= \"Bruh, that email address is invalid\" required >     <div class= \"help-block with-errors\" ></div>   </div>   <div class= \"form-group\" >     <label for= \"inputPassword\" class= \"control-label\" >Password</label>     <div class= \"form-group col-sm-6\" >       <input type= \"password\" data-minlength= \"6\" class= \"form-control\" id= \"inputPassword\" placeholder= \"Password\" required >       <span class= \"help-block\" >Minimum of 6 characters</span>     </div>     <div class= \"form-group col-sm-6\" >       <input type= \"password\" class= \"form-control\" id= \"inputPasswordConfirm\" data-match= \"#inputPassword\" data-match-error= \"Whoops, these don't match\" placeholder= \"Confirm\" required >       <div class= \"help-block with-errors\" ></div>     </div>     </div>   </div>   <div class= \"form-group\" >     <div class= \"radio\" >       <label>         <input type= \"radio\" name= \"underwear\" required >         Boxers       </label>     </div>     <div class= \"radio\" >       <label>         <input type= \"radio\" name= \"underwear\" required >         Briefs       </label>     </div>   </div>   <div class= \"form-group\" >     <div class= \"checkbox\" >       <label>         <input type= \"checkbox\" id= \"terms\" data-error= \"Before you wreck yourself\" required >         Check yourself       </label>       <div class= \"help-block with-errors\" ></div>     </div>   </div>   <div class= \"form-group\" >     <button type= \"submit\" class= \"btn btn-primary\" >Submit</button>   </div> </form>\n<form role= \"form\" data-toggle= \"validator\" >   ... </form>\n$ ( '#myForm' ). validator ()\nFollow Bootstrap's examples for appropriate form markup. It's important that each input field is in its own individual \nBecause this plugin depends on the HTML5 Constraint Validation API, Internet Explorer 9 and older are not supported. If you need to support these browsers, you must add a polyfill like Ryan Seddon's H5F.\n<form role= \"form\" data-toggle= \"validator\" >   <div class= \"form-group\" >     <label for= \"inputEmail\" >Email</label>     <input type= \"email\" id= \"inputEmail\" >     <div class= \"help-block with-errors\" ></div>   </div> </form>\nOptions can be passed via data attributes or JavaScript. For data attributes, append the option name to \n, as in \ndelay             number             500             Number of milliseconds to wait before displaying an error on a form field.           \nhtml             boolean             false             Insert HTML into the error messages. If false, jQuery's text method will be used to insert content into the DOM. Use text if you're worried about XSS attacks.           \ndisable             boolean             true             Disable the submit button until the form is valid and all required fields are complete.           \nfeedback             object             glyphicon classes                           \nOverride the classes used for form feedback icons. Defaults to Bootstrap's glyphicons:\ncustom             object             {}                           \nAdd custom validators to be run. Validators should be functions that receive the jQuery element as an argument and return a truthy or falsy value based on the validity of the input.\n option.            \nerrors             object             sensible defaults             \nError messages to show for each type of validation. Defaults to:\nError messages for individual form fields can alternatively be specified through the use of data attributes. You can specify an error message for each type of validator on a field, i.e. \ndata-match-error=\"\"\n or use \ndata-error=\"\"\n for a blanket error message to show for any errors on that field.\nvalidate.bs.validator              This event fires immediately when a form field is validated.            \nvalidated.bs.validator              This event is fired after a form field has been validated.            \nWhen the form is invalid, \n is called on the submit event. As a result, if you want to hook into the submit event and do something conditionally based on whether or not the form was valid, you can check if the event \n"
}
